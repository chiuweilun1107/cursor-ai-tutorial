# AI操作規範 - 避免路徑錯誤指南

## 📋 任務前檢查清單

### **1. 路徑操作前必須執行**
```bash
# 1. 確認當前工作目錄
pwd

# 2. 查看目標文件是否存在
ls -la src/data/courses/
ls -la src/data/lessons/
ls -la src/assets/

# 3. 確認文件結構
tree src/ -I node_modules
```

### **2. 文件操作標準流程**
1. 先使用 `list_dir` 確認目錄結構
2. 使用 `file_search` 尋找目標文件
3. 使用 `read_file` 確認文件內容
4. 再進行編輯操作

## 🗂️ 專案文件路徑對照表

### **課程相關文件**
| 用途 | 正確路徑 | 錯誤示例 |
|------|----------|----------|
| 所有課程列表 | `src/data/courses/all-courses.json` | ❌ `src/data/courses.json` |
| 第一階段課程 | `src/data/courses/stage1-course.json` | ❌ `src/data/stage1-course.json` |
| 第一階段課程內容 | `src/data/lessons/stage1-lessons.json` | ❌ `src/lessons/stage1.json` |
| 課程備份 | `src/data/lessons/stage1-lessons-backup.json` | ❌ `src/backup/lessons.json` |

### **組件文件**
| 組件類型 | 正確路徑 | 用途 |
|----------|----------|------|
| 主輪播 | `src/components/HeroCarousel.tsx` | 首頁輪播組件 |
| 佈局 | `src/components/Layout.tsx` | 全站佈局 |
| 通用組件 | `src/components/common/` | 可重用組件 |
| 課程組件 | `src/components/course/` | 課程相關組件 |
| UI組件 | `src/components/ui/` | 基礎UI組件 |

### **頁面文件**
| 頁面 | 正確路徑 | 用途 |
|------|----------|------|
| 首頁 | `src/pages/Home.tsx` | 網站首頁 |
| 課程列表 | `src/pages/Courses.tsx` | 課程展示頁 |
| 課程詳情 | `src/pages/CourseDetail.tsx` | 單一課程詳情 |
| 課程觀看 | `src/pages/LessonViewer.tsx` | 課程內容觀看 |
| MCP課程 | `src/pages/MCPCourse.tsx` | MCP專門課程 |

### **資源文件**
| 資源類型 | 正確路徑 | 說明 |
|----------|----------|------|
| 圖片資源 | `src/assets/` | 本地圖片存放 |
| 圖片管理 | `src/utils/imageAssets.ts` | 圖片路徑管理 |
| 路徑管理 | `src/utils/pathManager.ts` | 統一路徑管理 |

## 🔧 常用AI操作指令模板

### **1. 檢查文件結構**
```
請執行以下命令確認文件結構：
1. list_dir("src/data/courses")
2. list_dir("src/data/lessons") 
3. list_dir("src/assets")
```

### **2. 課程內容更新**
```
更新課程內容時請遵循：
1. 先讀取: read_file("src/data/courses/all-courses.json")
2. 確認結構後編輯
3. 同時更新相關的 lessons 文件
```

### **3. 圖片資源操作**
```
圖片相關操作：
1. 檢查: read_file("src/utils/imageAssets.ts")
2. 確認圖片分類（hero/courses/slides等）
3. 使用對應的圖片函數
```

## ⚠️ 常見錯誤及解決方案

### **路徑錯誤類型**
1. **相對路徑錯誤**
   - ❌ `./courses/all-courses.json`  
   - ✅ `src/data/courses/all-courses.json`

2. **目錄層級錯誤**
   - ❌ `src/courses/stage1.json`
   - ✅ `src/data/courses/stage1-course.json`

3. **文件名稱錯誤**
   - ❌ `courses.json`
   - ✅ `all-courses.json`

4. **擴展名錯誤**
   - ❌ `imageAssets.js`
   - ✅ `imageAssets.ts`

### **預防措施**
1. **每次操作前都要確認文件存在**
2. **使用 pathManager.ts 中的路徑常數**
3. **不要硬編碼路徑字串**
4. **操作後驗證結果**

## 📖 AI助手指令範例

### **正確的操作範例**
```
AI請執行以下任務：
1. 使用 read_file 讀取 "src/data/courses/all-courses.json"
2. 確認課程結構後，編輯對應的內容
3. 同時檢查 "src/data/lessons/stage1-lessons.json" 是否需要更新
4. 更新 "src/utils/imageAssets.ts" 中的對應圖片路徑
```

### **錯誤的指令範例**
```
❌ 請更新 courses.json 文件  (路徑不明確)
❌ 修改圖片路徑  (沒有指定具體文件)
❌ 更新課程內容  (範圍太廣泛)
```

## 🎯 最佳實踐

### **1. 任務分解**
- 將複雜任務分解為小步驟
- 每個步驟都確認文件路徑
- 操作完成後驗證結果

### **2. 路徑管理**
- 優先使用 `pathManager.ts` 中的路徑
- 避免直接硬編碼路徑字串
- 使用相對路徑時要小心層級關係

### **3. 錯誤處理**
- 操作前先檢查文件是否存在
- 備份重要文件後再進行修改
- 保持文件結構的一致性

### **4. 協作規範**
- 修改文件路徑時要通知相關人員
- 保持文檔更新同步
- 記錄重要的路徑變更

## 📚 參考資源

- 路徑管理工具: `src/utils/pathManager.ts`
- 圖片資源管理: `src/utils/imageAssets.ts`
- 專案結構文檔: `WEBSITE_DEVELOPMENT_PLAN.md`
- 課程規劃文檔: `course-planning.md`

---

**記住：每次操作前都要確認路徑，寧可多花時間確認，也不要因為路徑錯誤導致任務失敗！** 